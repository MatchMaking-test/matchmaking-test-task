version: "3.9"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - matchmaking-net

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - matchmaking-net

  kafka-init:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "sleep 10 && \
       kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic matchmaking.request --partitions 1 --replication-factor 1 && \
       kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic matchmaking.complete --partitions 1 --replication-factor 1"
    networks:
      - matchmaking-net

  matchmaking.service:
    build:
      context: .
      dockerfile: MatchMaking.Service/Dockerfile
    container_name: matchmaking-service
    ports:
      - "5001:5001"
    depends_on:
      kafka-init:
        condition: service_completed_successfully
      redis:
        condition: service_started
    networks:
      - matchmaking-net

  matchmaking.worker:
    build:
      context: .
      dockerfile: MatchMaking.Worker/Dockerfile
    container_name: matchmaking-worker
    depends_on:
      kafka-init:
        condition: service_completed_successfully
      redis:
        condition: service_started
    networks:
      - matchmaking-net

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - matchmaking-net

networks:
  matchmaking-net:
    driver: bridge
